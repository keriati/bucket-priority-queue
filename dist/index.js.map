{"version":3,"sources":["../src/index.ts","../src/BucketQueue.ts","../src/MaxBucketQueue.ts","../src/MinBucketQueue.ts"],"sourcesContent":["export { MaxBucketQueue } from \"./MaxBucketQueue\";\nexport { MinBucketQueue } from \"./MinBucketQueue\";\nexport type { Priority, Integer } from \"./types\";\n","import { Priority } from \"./types\";\n\nexport abstract class BucketQueue<T> {\n  protected buckets: T[][] = [];\n\n  protected pointer = 0;\n\n  protected _size = 0;\n\n  constructor(items: [T, Priority][] = []) {\n    for (let i = 0; i < items.length; i++) {\n      this.push(items[i][0], items[i][1]);\n    }\n  }\n\n  abstract push(item: T, priority: Priority): void;\n\n  abstract pop(): T | undefined;\n\n  add(item: T, priority: Priority): void {\n    this.push(item, priority);\n  }\n\n  offer(item: T, priority: Priority): void {\n    this.push(item, priority);\n  }\n\n  poll(): T | undefined {\n    return this.pop();\n  }\n\n  peek(): T | undefined {\n    if (!this._size) return undefined;\n\n    const bucket = this.buckets[this.pointer];\n\n    return bucket[bucket.length - 1];\n  }\n\n  clear(): void {\n    this.buckets = [];\n    this.pointer = 0;\n    this._size = 0;\n  }\n\n  refill(items: [T, Priority][]): void {\n    this.clear();\n    for (let i = 0; i < items.length; i++) {\n      this.push(items[i][0], items[i][1]);\n    }\n  }\n\n  has(item: T): boolean {\n    for (let i = 0; i < this.buckets.length; i++) {\n      if (this.buckets[i]?.includes(item)) return true;\n    }\n    return false;\n  }\n\n  contains: (item: T) => boolean = this.has;\n\n  toArray(): T[] {\n    const array: T[] = [];\n    for (let i = 0; i < this.buckets.length; i++) {\n      array.push(...this.buckets[i]);\n    }\n    return array;\n  }\n\n  isEmpty = (): boolean => this._size === 0;\n\n  get size(): number {\n    return this._size;\n  }\n\n  get length(): number {\n    return this._size;\n  }\n}\n","import { Priority } from \"./types\";\nimport { BucketQueue } from \"./BucketQueue\";\n\nexport class MaxBucketQueue<T> extends BucketQueue<T> {\n  push(item: T, priority: Priority): void {\n    if (!this.buckets[priority]) this.buckets[priority] = [];\n\n    this.buckets[priority].push(item);\n\n    if (this._size === 0) {\n      this.pointer = priority;\n    } else {\n      if (priority > this.pointer) this.pointer = priority;\n    }\n\n    this._size++;\n  }\n\n  pop(): T | undefined {\n    if (!this._size) return undefined;\n\n    const bucket = this.buckets[this.pointer];\n    const item = bucket!.pop();\n\n    if (bucket.length === 0) {\n      for (let i = this.buckets.length - 1; i >= 0; i--) {\n        if (this.buckets[i]?.length > 0) {\n          this.pointer = i;\n          break;\n        }\n      }\n    }\n\n    this._size--;\n\n    return item;\n  }\n}\n","import { Priority } from \"./types\";\nimport { BucketQueue } from \"./BucketQueue\";\n\nexport class MinBucketQueue<T> extends BucketQueue<T> {\n  push(item: T, priority: Priority): void {\n    if (!this.buckets[priority]) this.buckets[priority] = [];\n\n    this.buckets[priority].push(item);\n\n    if (this._size === 0) {\n      this.pointer = priority;\n    } else {\n      if (priority < this.pointer) this.pointer = priority;\n    }\n\n    this._size++;\n  }\n\n  pop(): T | undefined {\n    if (!this._size) return undefined;\n\n    const bucket = this.buckets[this.pointer];\n    const item = bucket.pop();\n\n    if (bucket.length === 0) {\n      for (let i = 0; i < this.buckets.length; i++) {\n        if (this.buckets[i]?.length > 0) {\n          this.pointer = i;\n          break;\n        }\n      }\n    }\n\n    this._size--;\n\n    return item;\n  }\n}\n"],"mappings":"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","names":["src_exports","__export","MaxBucketQueue","MinBucketQueue","__toCommonJS","BucketQueue","items","i","item","priority","bucket","_a","array","MaxBucketQueue","BucketQueue","item","priority","_a","bucket","MinBucketQueue","BucketQueue","item","priority","_a","bucket"]}